name: Release V2

on:
  push:
    tags:
        - 'v*'
  workflow_dispatch:  

jobs:

    # get_default_envs:
    #   name: Gather Environments
    #   runs-on: ubuntu-latest
    #   steps:
    #   - uses: actions/checkout@v2
    #   - uses: actions/setup-python@v2
    #   - name: Install PlatformIO
    #     run: |
    #       pip install -U platformio
    #       platformio update
    #   - name: Dump github context
    #     run:   echo "$GITHUB_CONTEXT"
    #     shell: bash
    #     env:
    #       GITHUB_CONTEXT: ${{ toJson(github) }}
    #   - name: Get default environments
    #     id: envs
    #     run: |
    #       echo "::set-output name=environments::$(pio project config --json-output | jq -cr '.[0][1][0][1]')"
    #       echo ${{ steps.envs.outputs.environments }}
    #   outputs:
    #     environments: ${{ steps.envs.outputs.environments }}

    build:
        name: Create Release

        runs-on: ubuntu-latest
        # needs: get_default_envs

        strategy:
          matrix:
            # environment: ${{ fromJSON(needs.get_default_envs.outputs.environments) }}
            # environment: [TTGO_TDISPLAY, TTGO_TDISPLAY_SANDWICH]
            environment: [TTGO_TDISPLAY_SANDWICH]
            # environment: [esp32dev, esp32dev-sandwich]
            # environment: [esp32dev-sandwich]

        steps: 

        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v1
          with:
            python-version: ${{ matrix.python-version }}

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -U platformio
            platformio update

        - name: Get the version
          id: get_version
          run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

        - name: Show version
          run: echo ${{ steps.get_version.outputs.VERSION }}

        - name: Get current date
          id: date
          run: |
            echo "::set-output name=date::$(date +'%d-%m-%Y')"
            echo "::set-output name=time::$(date +'%H:%M:%S')"

        - name: Build release version
          run: |
            pio run -e ${{ matrix.environment }} -t buildfs
            # pio run -t buildfs

        - name: Create manifest file
          id: createmanifest
          run: |
            # Create manifest
            echo "{" > ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "  \"name\": \"${{ github.event.repository.name }}-${{ matrix.environment }}\"," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "  \"version\": \"${{ steps.get_version.outputs.VERSION }}\"," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "  \"compilation_date\": \"${{ steps.date.outputs.date }}\"," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "  \"compilation_time\": \"${{ steps.date.outputs.time }}\"," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "  \"new_install_skip_erase\": true," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "  \"builds\": [" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "      {" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "        \"chipFamily\": \"ESP32\"," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "        \"improv\": false," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "        \"parts\": [" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "          { \"path\": \"bootloader_dio_40m.bin\", \"offset\": 4096  }," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "          { \"path\": \"partitions.bin\", \"offset\": 32768 }," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "          { \"path\": \"boot_app0.bin\", \"offset\": 57344 }," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "          { \"path\": \"${{ github.event.repository.name }}-${{ matrix.environment }}-${{ steps.get_version.outputs.VERSION }}.bin\", \"offset\": 65536 }," >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "          { \"path\": \"spiffs-${{ github.event.repository.name }}-${{ matrix.environment }}-${{ steps.get_version.outputs.VERSION }}.bin\", \"offset\": 3997696 }" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "        ]" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "      }" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "  ]" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "}" >> ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json
            echo "::set-output name=manifest::$(cat ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json)"

            
        - name: Read manifest files with cat 
          run:  |
            echo "Manifest file contents readed with cat:"
            cat ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json

#         - name: Read manifest files
#           id: readmanifests
#           run:  |
#             echo "Manifest file contents from variable:"
#             echo ${{ steps.createmanifest.outputs.manifest }}

        - name: List files 1
          run: |
            ls -la .pio/build/${{ matrix.environment }}

        - name: Copy binary files
          if: startsWith(github.ref, 'refs/tags/')
          run: |
            ls -la .pio/build/${{ matrix.environment }}
            rm -rf ./firmware/${{ matrix.environment }}
            mkdir ./firmware
            mkdir ./firmware/${{ matrix.environment }}
            ls -la ./firmware
            ls -la ./firmware/${{ matrix.environment }}
            cp ~/.platformio/packages/framework-arduinoespressif32/tools/sdk/bin/bootloader_dio_40m.bin ./firmware/${{ matrix.environment }}/${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}-bootloader.bin
            cp .pio/build/${{ matrix.environment }}/partitions.bin  ./firmware/${{ matrix.environment }}/${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}-partitions.bin
            cp .pio/build/${{ matrix.environment }}/firmware.bin    ./firmware/${{ matrix.environment }}/${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}-firmware.bin
            cp .pio/build/${{ matrix.environment }}/spiffs.bin      ./firmware/${{ matrix.environment }}/${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}-spiffs.bin

            cp ${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json ./firmware/${{ matrix.environment }}//${{ github.event.repository.name }}-${{ matrix.environment }}.manifest.json

            ls -al ./firmware # list the files for confirmation.
            ls -al ./firmware/${{ matrix.environment }} # list the files for confirmation.

        - name: List files 2
          run: |
            ls -la .pio/build/${{ matrix.environment }}
            ls -la ./firmware/${{ matrix.environment }}

        - name: Create Release
          id: create_release
          uses: softprops/action-gh-release@v1
          if: startsWith(github.ref, 'refs/tags/')
          with:
            name: ${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}-${{ matrix.environment }}
            files: |
              ./firmware/${{ matrix.environment }}/*.bin
              ./firmware/${{ matrix.environment }}/*.json
            draft: true
            # prerelease: true
            generate_release_notes: true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_ACTION_TOKEN }}          
        - name: ðŸ“‚ Sync files - FTP-Deploy-Action
          uses: SamKirkland/FTP-Deploy-Action@2.0.0
          env:
            FTP_SERVER: ${{ secrets.FTP_SERVER }}
            FTP_USERNAME: ${{ secrets.FTP_USER }}
            FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
            LOCAL_DIR: ./firmware/${{ matrix.environment }}/
            REMOTE_DIR: /public_html/wp-content/uploads/firmware/${{ github.event.repository.name }}/
            METHOD: sftp
            PORT: 22
            ARGS: --verbose
        - name: Clean WP Rocket Cache
          run: curl https://emariete.com/clean_cache.php
