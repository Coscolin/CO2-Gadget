name: Release

on:
  push:
    tags:
        - 'v*'
  workflow_dispatch:  

jobs:

    get_default_envs:
      name: Gather Environments
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install PlatformIO
        run: |
          pip install -U platformio
          platformio update
      - name: Dump github context
        run:   echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      - name: Get default environments
        id: envs
        run: |
          echo "::set-output name=environments::$(pio project config --json-output | jq -cr '.[0][1][0][1]')"
          echo ${{ steps.envs.outputs.environments }}
      outputs:
        environments: ${{ steps.envs.outputs.environments }}

    build:
        name: Create Release
        runs-on: ubuntu-latest
        needs: get_default_envs
        strategy:
          matrix:
            # environment: ${{ fromJSON(needs.get_default_envs.outputs.environments) }}
            # environment: [esp32dev, esp32dev-sandwich]
            environment: [esp32dev-sandwich]
        steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v1
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -U platformio
            platformio update
        - name: Get the version
          id: get_version
          run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
        - name: Show version
          run: echo ${{ steps.get_version.outputs.VERSION }}
        - name: Build test version
          run: |
            pio run -e ${{ matrix.environment }}
        - name: Create manifest file
          id: createmanifest
          run: |
            echo "{" > file.txt
            echo "  \"name\": \"${{ github.event.repository.name }}- ${{ matrix.environment }}\"," >> file.txt
            echo "  \"version\": \"${{ steps.get_version.outputs.VERSION }}\"," >> file.txt
            echo "  \"new_install_skip_erase": false,\" >> file.txt
            echo "  \"builds": [\" >> file.txt
            echo "      {" >> file.txt
            echo "        \"chipFamily\": \"ESP32\"," >> file.txt
            echo "        \"improv\": false," >> file.txt
            echo "        \"parts\": [" >> file.txt
            echo "          { \"path\": \"${{ github.event.repository.name }}.bin\", \"offset\": 65536 }" >> file.txt
            echo "        ]" >> file.txt
            echo "      }" >> file.txt
            echo "  ]" >> file.txt
            echo "}" >> file.txt
            echo "::set-output name=manifest::$(cat file.txt)"
        - name: Read manifest file with cat 
          run:  |
            echo "Manifest file contents readed with cat:"
            cat file.txt
        - name: Read manifest file
          id: readmanifest
          run:  |
            echo "Manifest file contents from variable:"
            echo ${{ steps.createmanifest.outputs.manifest }}
        - name: Upload artifacts
          uses: actions/upload-artifact@v2
          with:
            name: ${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}-${{ matrix.environment }}
            path: .pio/build/${{ matrix.environment }}/*.bin
        - name: Rename bin file
          if: startsWith(github.ref, 'refs/tags/')
          run: |
            mv .pio/build/${{ matrix.environment }}/firmware.bin .pio/build/${{ matrix.environment }}/${{ github.event.repository.name }}-${{ matrix.environment }}.bin
            mv .pio/build/${{ matrix.environment }}/partitions.bin .pio/build/${{ matrix.environment }}/${{ github.event.repository.name }}-${{ matrix.environment }}-partitions.bin
        - name: Create Release
          id: create_release
          uses: softprops/action-gh-release@v1
          if: startsWith(github.ref, 'refs/tags/')
          with:
            name: ${{ github.event.repository.name }}-v${{ steps.get_version.outputs.VERSION }}-${{ matrix.environment }}
            files: .pio/build/${{ matrix.environment }}/*.bin            
            draft: true
            # prerelease: true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_ACTION_TOKEN }}
        - name: ðŸ“‚ Sync files - FTP-Deploy-Action
          uses: SamKirkland/FTP-Deploy-Action@2.0.0
          with:
            FTP_SERVER: ${{ secrets.ftp_server }}
            FTP_USERNAME: ${{ secrets.ftp_user }}
            FTP_PASSWORD: ${{ secrets.ftp_password }}
            local-LOCAL_DIR: .pio/build/${{ matrix.environment }}/
            REMOTE_DIR-dir: /public_html/wp-content/uploads/firmware/${{ github.event.repository.name }}/
            METHOD: sftp
            PORT: 22
            ARGS: --verbose

